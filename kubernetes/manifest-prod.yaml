apiVersion: v1
kind: Service
metadata:
  labels:
    app: botfront
  name: botfront
  namespace: botfront-eu-prod
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: botfront
  sessionAffinity: None
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: botfront
  namespace: botfront-eu-prod
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: botfront
    spec:
      containers:
      - name: botfront
        image: gcr.io/botfront-project/botfront:latest
        env:
        - name: PORT
          value: "3000"
        - name: ROOT_URL
          valueFrom:
            configMapKeyRef:
              key: ROOT_URL
              name: botfront-api-eu-config
        - name: MONGO_URL
          valueFrom:
            configMapKeyRef:
              key: MONGO_URL
              name: botfront-api-eu-config
        - name: MONGO_OPLOG_URL
          valueFrom:
            configMapKeyRef:
              key: MONGO_OPLOG_URL
              name: botfront-api-eu-config
        - name: MAIL_URL
          valueFrom:
            configMapKeyRef:
              key: MAIL_URL
              name: botfront-api-eu-config
        ports:
        - containerPort: 3000
        resources:
          requests:
            cpu: 500m
            memory: 300Mi
          limits:
            cpu: 2000m
            memory: 4000Mi
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: botfront-eu-prod
  name: ingress-botfront
  annotations:
    kubernetes.io/ingress.class: nginx
    certmanager.k8s.io/cluster-issuer: letsencrypt-production
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  tls:
  - secretName: cloud-botfront-io-tls
    hosts:
    - cloud.botfront.io
  rules:
  - host: cloud.botfront.io
    http:
      paths:
      - path: /
        backend:
          serviceName: botfront
          servicePort: 80
---