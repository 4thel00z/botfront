type Query {
  getActivity(
    modelId: String!,
    pageSize: Int,
    sortKey: String,
    sortDesc: Boolean,
    cursor: String,
    validated: Boolean,
    ooS: Boolean
  ): ActivityPage
}

type ActivityPage {
  activity: [Activity!],
  pageInfo: PageInfo
}

type Mutation {
  upsertActivity(modelId: String!, data: [ActivityInput!]!): [Activity!]
  deleteActivity(modelId: String!, ids: [String!]!): [Activity!]
  addActivityToTraining(modelId: String!, ids: [String!]!): [Activity!]
}

input ActivityInput {
  _id: String,
  modelId: String,
  text: String,
  intent: String,
  entities: [EntityInput],
  confidence: Float,
  validated: Boolean,
  createdAt: Date,
  updatedAt: Date,
  ooS: Boolean,
}

type Activity {
  _id: String!,
  modelId: String!,
  text: String!,
  intent: String,
  entities: [Entity],
  confidence: Float,
  validated: Boolean,
  createdAt: Date,
  updatedAt: Date,
  ooS: Boolean,
}
