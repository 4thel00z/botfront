{
    "_id": "SETTINGS",
    "settings": {
        "public": {
            "defaultNLUConfig": "pipeline:\n  - name: WhitespaceTokenizer\n  - name: CountVectorsFeaturizer\n  - name: DIETClassifier\n  - name: rasa_addons.nlu.components.gazette.Gazette\n  - name: EntitySynonymMapper",
            "backgroundImages": [
                "https://source.unsplash.com/collection/315548/2400x1500"
            ]
        },
        "private": {
            "socketHost": "botfront.io",
            "rasaServerDefaultUrl": "http://rasa-service.{PROJECT_NAMESPACE}",
            "bfApiHost": "http://botfront-api-service.botfront",
            "defaultEndpoints": "models:\n  url: 'https://storage.googleapis.com/{GCP_MODELS_BUCKET}/model-{BF_PROJECT_ID}.tar.gz'\n  wait_time_between_pulls: 3600\nnlg:\n  type: 'rasa_addons.core.nlg.GraphQLNaturalLanguageGenerator'\n  url: 'http://botfront-app-service.botfront/graphql'\naction_endpoint:\n  url: 'http://actions-service.{PROJECT_NAMESPACE}/webhook'\ntracker_store:\n  store_type: 'rasa_addons.core.tracker_stores.botfront.BotfrontTrackerStore'\n  url: 'http://botfront-app-service.botfront/graphql'\n  project_id: '{BF_PROJECT_ID}'",
            "defaultCredentials": "rasa_addons.core.channels.webchat.WebchatInput:\n  session_persistence: true\n  base_url: https://{PROJECT_NAMESPACE}.{SOCKET_HOST}\n  socket_path: '/socket.io/'",
            "defaultPolicies": "policies:\n  #- name: KerasPolicy\n    #epochs: 200\n  - name: FallbackPolicy\n  - name: AugmentedMemoizationPolicy\n  - name: MemoizationPolicy",
            "defaultDefaultDomain": "slots:\n  disambiguation_message:\n    type: unfeaturized\nactions:\n  - action_botfront_disambiguation\n  - action_botfront_disambiguation_followup\n  - action_botfront_fallback\n  - action_botfront_mapping",
            "webhooks": {
                "restartRasaWebhook": {
                    "name": "RestartRasa",
                    "url": "",
                    "method": "POST"
                },
                "uploadImageWebhook": {
                    "name": "UploadImage",
                    "url": "",
                    "method": "POST"
                },
                "deleteImageWebhook": {
                    "name": "DeleteImage",
                    "url": "",
                    "method": "DELETE"
                }
            }
        }
    }
}
